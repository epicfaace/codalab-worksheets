name: Test
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - run: npm ci
        working-directory: ./frontend
      - run: npm run check-ci
        working-directory: ./frontend
        env:
          CI: true
      - run: pip install --upgrade black==18.9b0
      - run: black . --check --diff
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [rest-server, worker, frontend]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - run: python3 codalab_service.py build --pull --version ${VERSION} --push -s ${SERVICE}
        env:
          CODALAB_DOCKER_USERNAME: ${{ secrets.CODALAB_DOCKER_USERNAME }}
          CODALAB_DOCKER_PASSWORD: ${{ secrets.CODALAB_DOCKER_PASSWORD }}
          VERSION: ${{ github.head_ref }}
          SERVICE: ${{ matrix.service }}

  test_backend:
    name: Test backend
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        test: [run]
        # test: [unittest gen-rest-docs gen-cli-docs gen-readthedocs basic status batch anonymous competition unicode rest1 upload1 upload2 upload3 upload4 download refs binary rm make worksheet_search worksheet_tags freeze detach perm search_time groups,search,run,run2,read,kill,write,mimic workers,resources,copy memoize,netcat,netcurl]
    steps:
      - name: Clear free space
        run: |
            sudo rm -rf /opt/ghc
            df -h
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Setup tests
        run: |
          sudo service mysql stop
          python3 codalab_service.py pull --version ${VERSION}
        env:
          VERSION: ${{ github.head_ref }}
      - name: Run tests
        run: |
          python3 codalab_service.py start --services default --version ${VERSION}
          python3 test_runner.py --version ${VERSION} ${TEST}
        env:
          TEST: ${{ matrix.test }}
          VERSION: ${{ github.head_ref }}
      - name: Save logs
        run: |
          mkdir /tmp/logs
          for c in $(docker ps -a --format="{{.Names}}"); do docker logs $c > /tmp/logs/$c.log 2> /tmp/logs/$c.err; done
      - name: Upload logs
        uses: actions/upload-artifact@v1
        with:
          name: logs-test-${{ matrix.test }}
          path: /tmp/logs